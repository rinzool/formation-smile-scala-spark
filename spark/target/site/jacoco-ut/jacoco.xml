<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="introduction-scala-spark"><sessioninfo id="tormund-688a7ceb" start="1572294976039" dump="1572294993939"/><sessioninfo id="tormund-2b00afa3" start="1572295273954" dump="1572295292171"/><package name="fr/smile"><class name="fr/smile/Exo2$"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logger" desc="()Lorg/slf4j/Logger;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="18"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSquaredHeight" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;" line="47"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateImc" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;" line="54"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keepNameAndImc" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;" line="60"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="49"/><counter type="LINE" missed="12" covered="5"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="fr/smile/Exo1$"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="logger" desc="()Lorg/slf4j/Logger;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="15"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="fr/smile/Exo1"><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="logger" desc="()Lorg/slf4j/Logger;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="fr/smile/Exo4$"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logger" desc="()Lorg/slf4j/Logger;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="imcReferential" desc="()Lscala/collection/Seq;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V" line="20"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLitImc" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;" line="66"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="joinWithImcReferential" desc="(Lorg/apache/spark/sql/Dataset;Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countForEachImcCategory" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;" line="85"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="94" covered="89"/><counter type="LINE" missed="16" covered="10"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="fr/smile/Exo3$"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logger" desc="()Lorg/slf4j/Logger;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="18"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="groupByChannel" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;" line="45"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortVideos" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;" line="54"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="42"/><counter type="LINE" missed="10" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="fr/smile/Exo4"><method name="countForEachImcCategory" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinWithImcReferential" desc="(Lorg/apache/spark/sql/Dataset;Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLitImc" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="imcReferential" desc="()Lscala/collection/Seq;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="logger" desc="()Lorg/slf4j/Logger;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="fr/smile/Exo4$$typecreator5$1"><method name="apply" desc="(Lscala/reflect/api/Mirror;)Lscala/reflect/api/Types$TypeApi;" line="28"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="fr/smile/Exo3"><method name="sortVideos" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="groupByChannel" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="logger" desc="()Lorg/slf4j/Logger;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="fr/smile/Exo2"><method name="keepNameAndImc" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateImc" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSquaredHeight" desc="(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="logger" desc="()Lorg/slf4j/Logger;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Exo2.scala"><line nr="14" mi="3" ci="7" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="13" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="49"/><counter type="LINE" missed="12" covered="5"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="7" covered="5"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="Exo1.scala"><line nr="11" mi="10" ci="0" mb="0" cb="0"/><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="11" ci="0" mb="0" cb="0"/><line nr="27" mi="7" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="Exo3.scala"><line nr="14" mi="3" ci="7" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="8" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="15" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="42"/><counter type="LINE" missed="10" covered="7"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="Exo4.scala"><line nr="14" mi="3" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="38" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="90" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="165" covered="89"/><counter type="LINE" missed="16" covered="10"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="10" covered="6"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="342" covered="180"/><counter type="LINE" missed="53" covered="22"/><counter type="COMPLEXITY" missed="29" covered="15"/><counter type="METHOD" missed="29" covered="15"/><counter type="CLASS" missed="6" covered="3"/></package><counter type="INSTRUCTION" missed="342" covered="180"/><counter type="LINE" missed="53" covered="22"/><counter type="COMPLEXITY" missed="29" covered="15"/><counter type="METHOD" missed="29" covered="15"/><counter type="CLASS" missed="6" covered="3"/></report>